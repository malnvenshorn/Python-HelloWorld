name: Publish Python packages on Github
description: Build and publish Python package on Github

inputs:
  github_token:
    desscription: Github token
    required: true
    type: string
  asset_name:
    description: Name of the uploaded release asset
    type: string
  checkout:
    description: Checkout repository
    required: true
    type: boolean
    default: true

runs:
  using: composite
  steps:
    - name: Checkout
      if: ${{ inputs.checkout }}
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build
      shell: bash

    - name: Build package
      run: |
        python -m build --sdist --outdir dist/
      shell: bash

    - name: Find package
      id: find_package
      run: echo "::set-output name=path::$(find dist/ -name *.tar.gz)"
      shell: bash

    - name: Asset name
      id: asset_name
      run: echo "::set-output name=name::$([[ -n '${{ inputs.asset_name }}' ]] && echo '${{ inputs.asset_name }}' || basename '${{ steps.find_package.outputs.path }}')"
      shell: bash

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        draft: true
        prerelease: false
        release_name: ${{ github.ref }}
        tag_name: ${{ github.ref }}

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.find_package.outputs.path }}
        asset_name: ${{ steps.asset_name.outputs.name }}
        asset_content_type: application/gzip
